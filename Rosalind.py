#! /usr/bin/env python

#Counting DNA Nucleotides

#DNA='CGGACTCCGTTGTGTTAGCGGGCAAGCCGTTTGTAGAAAGCATAATAATGTGCTTGGTTTGTCAATCGTCATCGGCGGAGACCCCTGGGCTTCTTCAATCCAAGGACAGCCGCGGCGGTAACTAACGCCAGGCTAAATATTGAGTGAAGATGGGTACTTATCTGCCAAGTTCGCAAATGCGCCTCCGGTGCCCTGTAGAGAGTTAGTATAGCTATGTTCTCTAAGTAGAGAAGCGAGATTGATCCTCAGGTGCTATGATCGTAGTGTTGGGGCACATGCGTGAGCATGCGAAAAGCTATGCGACACTCAAGTTAGAAAACACCTAGTCTGAAACGCGCGTTCTGAAACCATCCGAGCGCGATGTGATTATGGAATAATCCGCAACGCTAGGGCCTTCAGTCTACATTCCCGACGGCGAGACGGTGCAAGTTTATATGTATATGGCGTGACCCATGGCTGATGTTTTATGCCAGTTTTGACCGGTCTAACGCCTGTATCAGGCTATGGTCCGCGGAGACGCCGGACGCAAGCGTCGTGGATGGCGGCACCCATCCTGATACCCGGCAAGCGAAGGGTGTCAAGGTGATGGCTTGAGCCCAAGGGCTAATATGGATCACCCACTTCCTACTCGCAGATCCTTTGTGTGGCCGGGACCGAATCATCCCTGTCGTATACTCCGAAACGGCCTCTTACGCATTATAACCCCCGGCAGAGTACTAGGAACCGGGCAAAGGACGCCTTAGATGGATTGAGTCCGACCCCGTTGACACCAACGAAGCCAAGGTCCGGGAAAAAGTGGGAATTACTCAAGCACCACCGC'
#pmrint(DNA.count('A'), end = ' ')
#print(DNA.count('C'), end = ' ')
#print(DNA.count('G'), end = ' ')
#print(DNA.count('T'))
#print('=' * 30)
#
#Transcribing DNA into RNA
#DNA_1 = "AGAGCGACGTAGATCGCTAAATCTACGTCGACGCTGCGTAATATTCAGTTGTCGCACACAACCGGAGCTGAGTACCCTGAGGAGCGTCTAGGTTAAGATTAAAAGTCGGGGCAATTTGTTATGGTATATTCCTCCACTGCAGCGTCTACTCAATTTGCGTGGATCCTCCAGGGGATATGCCCTTGCGGCTAGGAAAATGCTGGACCGACTTACTGGACTCATCCGCGTGGACACTCAATGAACTGAAACTCCCGCAGCCCCCGCCTCTGGGTAGGAAAATATACAAACACAGCGTAGCCTCGTCAGACCTGCTAGCGTGGCCCGCACAGAAAGTATGGAGGGGCTGTGGACTACAGGCTGGCGCAATGTTCTGACCTAGCCTTGGCCGTAGCGGGCCCCTACGCAGTACACAAGAGCAGGTGTTTTGTGTTAGAACCTGAGTCGTTTGCGCGATACAATGTTGAGTATATACTTGTCCCGACAACCGGAAGTGTCTCGCAACATTGTGAACGACTTGTTGGAGCAGTCTAACGTCCATCAATAATGTCTACACATATATCTCTCACAAGTGGGATGGGTGCATGAGCACTTGACATCAAAGAGCGCGGCCCTTAGAGAGAGGGATACTTACCATGTGTGCGTAGCTTAATTTGGAACGTGGTGTTCTGATGCTAACGTTGGTGCTAAAATACCTACGAGAGATCTTGAACAAGGCGAGCTAGGTGCTCCTCAGGTTCGCCCCTCGGGACCGTGTGCCCCTTAGGCGACTGGGCGAAAGAGGTAGCACACATAGGGCATAACGGTGAGCACGGACGTAGGGAGCTAGCACGGATACGTCGTCTTAACACTTGGACGCTATCGCCATAACGTTTTTCACCACATCTGTTGACGTCTTAGTGAACTTGTATAGTGGTCGAAGC"
#RNA_1 = DNA_1.replace('T', 'U')
#print(RNA_1)
#print('=' * 30)

#Complementing a Strand of DNA
#DNA_2 = "GTTAGTGAGTTGTTTTAGGTAAGCCGTCCCTATTTGTCGTGCACCATCCCTGTGTAGTTATCGTACCACTCTCAAGGACGGTTACCAGACTACGGAAGCCTGGAAACATGTGGCCAACGATGGGGTGAATTTGTAACTTTGGGATGTTAAAATACAGGTGACCGATGGGCGTCCTCGTAGCGCGCCCCGCCGGAGCTCGAGCACGATAGACAGGTCGAACTGTAGATCTTTGGTAGATCGCACCTACTCAACACAACAAAAGGCACACACGCACTGATTGATCATGCTGTGCGCCATCCTCCTCCCCCGTCGAGTCATGAACAGCTGAAGTGACACGGGCCAGGCAATGTTATCATACATGCGCTAAGGGACCCTCGTGCTCAGGTCCAAGAATTACCGTACGACACTTCGAGTGGGGCGTCTTACATCGATGAGCACCTTACTGATTAAATTAGTGGGGGCTGGAGAGAATCGTGCCACGCGGTATGTCAAGAGACCACGGAGTTTACGTGCTTACGTCAGGCAGGGCGTTTGTGAATATAGACGAGTCAACAAACGTGAACGCCCGTGTTTAGGCCCCGAGAGCTAGCTGCTCCCGGCCAAAGCAGTTACGTGTGCCTATCTCAACAGCCTAAAGAACGGTGAGCATACCCGGACCTCGACGTGCTGCAGGCGGGCGCTGACGGTTATAATCAGTAATCCGAGCGTGCAAGTCAACCCGAGTTCTACATAGCGGAATGTCATACCGCAGACGCACAGCGCTGCGTGGGCACGGAATCAACTGGGTAAATGTCCCTCGAGCCAGGAAGCGTTACCGGGCGGGCAGCCCACTAGTGAGCTTTT"
#CPS = DNA_2.replace('A', 't')
#CPS = CPS.replace('C', 'g')
#CPS = CPS.replace('T', 'a')
#CPS = CPS.replace('G', 'c')
#CPS = CPS.upper()
#print(CPS[::-1])
#print('=' * 30)
#

#compution GC Content
#file_name = 'gcCount.txt'
#d = {'G':0, 'C':0} 
#with open(file_name, 'r') as handle : 
#    for line in handle:
#        if line.startswith('>'):
#            name = line[1:]
#            name = dict()
#            continue
#        for base in line.strip():
#            if base == 'G':
#                name[base] = 0
#                name[base] += 1    
#            elif base == 'C':
#                name[base] = 0
#                name[base] += 1
#            else : 
#                pass    
#    print(name)     

d_name = {} 
file_name = 'gcCount.txt'
with open(file_name, 'r') as handle : 
    for line in handle :
        if line.startswith('>'):
            name = line[1:].rstrip()
            d_name[name] = ''
        else : 
            text = line.strip()  
            d_name[name] += text
cg = 0
def content(seq): 
    for i in seq :
        length = len(i)
        for s in i : 
            if s == 'C' or s=='G':
                cg += 1
    return cg/length

l_name = d_name.values()

k=l_name[3]
print(k)
#print(content(obj))
#print(d_name.values())

